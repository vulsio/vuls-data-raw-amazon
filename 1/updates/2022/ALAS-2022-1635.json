{
	"ID": "ALAS-2022-1635",
	"Author": "linux-security@amazon.com",
	"From": "linux-security@amazon.com",
	"Status": "final",
	"Type": "security",
	"Version": "1.4",
	"Title": "Amazon Linux AMI 2014.03 - ALAS-2022-1635: important priority package update for golang",
	"Issued": {
		"Date": "2022-09-15 03:57:00"
	},
	"Updated": {
		"Date": "2023-11-29 23:18:00"
	},
	"Severity": "important",
	"Description": "Package updates are available for Amazon Linux AMI that fix the following vulnerabilities:\nCVE-2022-32148:\n\tImproper exposure of client IP addresses in net/http before Go 1.17.12 and Go 1.18.4 can be triggered by calling httputil.ReverseProxy.ServeHTTP with a Request.Header map containing a nil value for the X-Forwarded-For header, which causes ReverseProxy to set the client IP as the value of the X-Forwarded-For header.\n\nCVE-2022-30635:\n\tA flaw was found in golang. When calling Decoder.Decode on a message that contains deeply nested structures, a panic can occur due to stack exhaustion and allows an attacker to impact system availability.\n\nCVE-2022-30633:\n\tUncontrolled recursion in Unmarshal in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via unmarshalling an XML document into a Go struct which has a nested field that uses the any field tag.\n\nCVE-2022-30632:\n\tA flaw was found in golang. Calling Glob on a path that contains a large number of path separators can cause a panic issue due to stack exhaustion. This can cause an attacker to impact availability.\n\nCVE-2022-30631:\n\tA flaw was found in golang. Calling the Reader.Read method on an archive that contains a large number of concatenated 0-length compressed files can cause a panic issue due to stack exhaustion.\n\nCVE-2022-30630:\n\tA flaw was found in the golang standard library, io/fs. Calling Glob on a path that contains a large number of path separators can cause a panic issue due to stack exhaustion. This could allow an attacker to impact availability.\n\nCVE-2022-30629:\n\tNon-random values for ticket_age_add in session tickets in crypto/tls before Go 1.17.11 and Go 1.18.3 allow an attacker that can observe TLS handshakes to correlate successive connections by comparing ticket ages during session resumption.\n\nCVE-2022-29526:\n\tA flaw was found in the syscall.Faccessat function when calling a process by checking the group. This flaw allows an attacker to check the process group permissions rather than a member of the file's group, affecting system availability.\n\nCVE-2022-28327:\n\tAn integer overflow flaw was found in Golang's crypto/elliptic library. This flaw allows an attacker to use a crafted scaler input longer than 32 bytes, causing P256().ScalarMult or P256().ScalarBaseMult to panic, leading to a loss of availability.\n\nCVE-2022-28131:\n\tA flaw was found in golang encoding/xml. When calling Decoder.Skip while parsing a deeply nested XML document, a panic can occur due to stack exhaustion and allows an attacker to impact system availability.\n\nCVE-2022-27664:\n\tIn net/http in Go before 1.18.6 and 1.19.x before 1.19.1, attackers can cause a denial of service because an HTTP/2 connection can hang during closing if shutdown were preempted by a fatal error.\n\nCVE-2022-27191:\n\tA broken cryptographic algorithm flaw was found in golang.org/x/crypto/ssh. This issue causes a client to fail authentification with RSA keys to servers that reject signature algorithms based on SHA-2, enabling an attacker to crash the server, resulting in a loss of availability.\n\nCVE-2022-24921:\n\tA stack overflow flaw was found in Golang's regexp module, which can crash the runtime if the application using regexp accepts very long or arbitrarily long regexps from untrusted sources that have sufficient nesting depths. To exploit this vulnerability, an attacker would need to send large regexps with deep nesting to the application. Triggering this flaw leads to a crash of the runtime, which causes a denial of service.\n\nCVE-2022-24675:\n\tA buffer overflow flaw was found in Golang's library encoding/pem. This flaw allows an attacker to use a large PEM input (more than 5 MB) ), causing a stack overflow in Decode, which leads to a loss of availability.\n\nCVE-2022-23806:\n\tA flaw was found in the elliptic package of the crypto library in golang when the IsOnCurve function could return true for invalid field elements. This flaw allows an attacker to take advantage of this undefined behavior, affecting the availability and integrity of the resource.\n\nCVE-2022-23773:\n\tcmd/go in Go before 1.16.14 and 1.17.x before 1.17.7 can misinterpret branch names that falsely appear to be version tags. This can lead to incorrect access control if an actor is supposed to be able to create branches but not tags.\n\nCVE-2022-23772:\n\tRat.SetString in math/big in Go before 1.16.14 and 1.17.x before 1.17.7 has an overflow that can lead to Uncontrolled Memory Consumption.\n\nCVE-2022-1962:\n\tA flaw was found in the golang standard library, go/parser. When calling any Parse functions on the Go source code, which contains deeply nested types or declarations, a panic can occur due to stack exhaustion. This issue allows an attacker to impact system availability.\n\nCVE-2022-1705:\n\tA flaw was found in golang. The HTTP/1 client accepted invalid Transfer-Encoding headers indicating \"chunked\" encoding. This issue could allow request smuggling, but only if combined with an intermediate server that also improperly accepts the header as invalid.\n\nCVE-2021-39293:\n\tA vulnerability was found in archive/zip of the Go standard library. Applications written in Go can panic or potentially exhaust system memory when parsing malformed ZIP files. An attacker capable of submitting a crafted ZIP file to a Go application using archive/zip to process that file could cause a denial of service via memory exhaustion or panic. This particular flaw is an incomplete fix for a previous flaw.\n\nCVE-2021-33196:\n\tA vulnerability was found in archive/zip of the Go standard library. Applications written in Go can panic or potentially exhaust system memory when parsing malformed ZIP files.\n\nCVE-2021-33195:\n\tA flaw was found in Go. The LookupCNAME, LookupSRV, LookupMX, LookupNS, and LookupAddr functions in the net package and methods on the Resolver type, may return arbitrary values retrieved from DNS, allowing injection of unexpected contents. The highest threat from this vulnerability is to integrity.\n\nCVE-2021-27919:\n\tAn out of bounds read vulnerability was found in golang. When using the archive/zip standard library (stdlib) and an unexpected file is parsed, it can cause golang to attempt to read outside of a slice (array) causing a panic in the runtime. A potential attacker can use this vulnerability to craft an archive which causes an application using this library to crash resulting in a Denial of Service (DoS).\n\nCVE-2021-27918:\n\tAn infinite loop vulnerability was found in golang. If an application defines a custom token parser initializing with `xml.NewTokenDecoder` it is possible for the parsing loop to never return. An attacker could potentially craft a malicious XML document which has an XML element with `EOF` within it, causing the parsing application to endlessly loop, resulting in a Denial of Service (DoS).\n",
	"References": {
		"Reference": [
			{
				"Href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-27918",
				"ID": "CVE-2021-27918",
				"Title": "",
				"Type": "cve"
			},
			{
				"Href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-27919",
				"ID": "CVE-2021-27919",
				"Title": "",
				"Type": "cve"
			},
			{
				"Href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-33195",
				"ID": "CVE-2021-33195",
				"Title": "",
				"Type": "cve"
			},
			{
				"Href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-33196",
				"ID": "CVE-2021-33196",
				"Title": "",
				"Type": "cve"
			},
			{
				"Href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-39293",
				"ID": "CVE-2021-39293",
				"Title": "",
				"Type": "cve"
			},
			{
				"Href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1705",
				"ID": "CVE-2022-1705",
				"Title": "",
				"Type": "cve"
			},
			{
				"Href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1962",
				"ID": "CVE-2022-1962",
				"Title": "",
				"Type": "cve"
			},
			{
				"Href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23772",
				"ID": "CVE-2022-23772",
				"Title": "",
				"Type": "cve"
			},
			{
				"Href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23773",
				"ID": "CVE-2022-23773",
				"Title": "",
				"Type": "cve"
			},
			{
				"Href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23806",
				"ID": "CVE-2022-23806",
				"Title": "",
				"Type": "cve"
			},
			{
				"Href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-24675",
				"ID": "CVE-2022-24675",
				"Title": "",
				"Type": "cve"
			},
			{
				"Href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-24921",
				"ID": "CVE-2022-24921",
				"Title": "",
				"Type": "cve"
			},
			{
				"Href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-27191",
				"ID": "CVE-2022-27191",
				"Title": "",
				"Type": "cve"
			},
			{
				"Href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-27664",
				"ID": "CVE-2022-27664",
				"Title": "",
				"Type": "cve"
			},
			{
				"Href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-28131",
				"ID": "CVE-2022-28131",
				"Title": "",
				"Type": "cve"
			},
			{
				"Href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-28327",
				"ID": "CVE-2022-28327",
				"Title": "",
				"Type": "cve"
			},
			{
				"Href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-29526",
				"ID": "CVE-2022-29526",
				"Title": "",
				"Type": "cve"
			},
			{
				"Href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-30629",
				"ID": "CVE-2022-30629",
				"Title": "",
				"Type": "cve"
			},
			{
				"Href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-30630",
				"ID": "CVE-2022-30630",
				"Title": "",
				"Type": "cve"
			},
			{
				"Href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-30631",
				"ID": "CVE-2022-30631",
				"Title": "",
				"Type": "cve"
			},
			{
				"Href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-30632",
				"ID": "CVE-2022-30632",
				"Title": "",
				"Type": "cve"
			},
			{
				"Href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-30633",
				"ID": "CVE-2022-30633",
				"Title": "",
				"Type": "cve"
			},
			{
				"Href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-30635",
				"ID": "CVE-2022-30635",
				"Title": "",
				"Type": "cve"
			},
			{
				"Href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-32148",
				"ID": "CVE-2022-32148",
				"Title": "",
				"Type": "cve"
			}
		]
	},
	"Pkglist": {
		"Collection": {
			"Short": "amazon-linux-ami",
			"Name": "Amazon Linux AMI",
			"Package": [
				{
					"Arch": "x86_64",
					"Epoch": "0",
					"Name": "golang-bin",
					"Release": "1.42.amzn1",
					"Version": "1.18.6",
					"Filename": "Packages/golang-bin-1.18.6-1.42.amzn1.x86_64.rpm"
				},
				{
					"Arch": "x86_64",
					"Epoch": "0",
					"Name": "golang-shared",
					"Release": "1.42.amzn1",
					"Version": "1.18.6",
					"Filename": "Packages/golang-shared-1.18.6-1.42.amzn1.x86_64.rpm"
				},
				{
					"Arch": "noarch",
					"Epoch": "0",
					"Name": "golang-tests",
					"Release": "1.42.amzn1",
					"Version": "1.18.6",
					"Filename": "Packages/golang-tests-1.18.6-1.42.amzn1.noarch.rpm"
				},
				{
					"Arch": "noarch",
					"Epoch": "0",
					"Name": "golang-src",
					"Release": "1.42.amzn1",
					"Version": "1.18.6",
					"Filename": "Packages/golang-src-1.18.6-1.42.amzn1.noarch.rpm"
				},
				{
					"Arch": "noarch",
					"Epoch": "0",
					"Name": "golang-docs",
					"Release": "1.42.amzn1",
					"Version": "1.18.6",
					"Filename": "Packages/golang-docs-1.18.6-1.42.amzn1.noarch.rpm"
				},
				{
					"Arch": "noarch",
					"Epoch": "0",
					"Name": "golang-misc",
					"Release": "1.42.amzn1",
					"Version": "1.18.6",
					"Filename": "Packages/golang-misc-1.18.6-1.42.amzn1.noarch.rpm"
				},
				{
					"Arch": "x86_64",
					"Epoch": "0",
					"Name": "golang-race",
					"Release": "1.42.amzn1",
					"Version": "1.18.6",
					"Filename": "Packages/golang-race-1.18.6-1.42.amzn1.x86_64.rpm"
				},
				{
					"Arch": "x86_64",
					"Epoch": "0",
					"Name": "golang",
					"Release": "1.42.amzn1",
					"Version": "1.18.6",
					"Filename": "Packages/golang-1.18.6-1.42.amzn1.x86_64.rpm"
				},
				{
					"Arch": "i686",
					"Epoch": "0",
					"Name": "golang",
					"Release": "1.42.amzn1",
					"Version": "1.18.6",
					"Filename": "Packages/golang-1.18.6-1.42.amzn1.i686.rpm"
				},
				{
					"Arch": "i686",
					"Epoch": "0",
					"Name": "golang-shared",
					"Release": "1.42.amzn1",
					"Version": "1.18.6",
					"Filename": "Packages/golang-shared-1.18.6-1.42.amzn1.i686.rpm"
				},
				{
					"Arch": "i686",
					"Epoch": "0",
					"Name": "golang-bin",
					"Release": "1.42.amzn1",
					"Version": "1.18.6",
					"Filename": "Packages/golang-bin-1.18.6-1.42.amzn1.i686.rpm"
				}
			]
		}
	}
}
